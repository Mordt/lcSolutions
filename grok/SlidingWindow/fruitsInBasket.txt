Fruits into Basket (medium)
Problem
visiting farm to collect fruit. 1 row of fruit truees, with two baskets. pick as many fruit as possible in the given baskets.

array of chars where each char represents a fruit tree. farm has following restrictions:
    1. each basket can only have one type of fruit. no limit to how many fruit in basket
    2. can start with any tree, but cant skip a tree once started.
    3. can pick exactly one fruit frrom every tree until you cannot. so stop when you have to pick from a third fruit type.

goal is to preturn the max number of fruit in both baskets.

solution
    problem follows sliding window pattern, find the length of the longest subarray with no more
    than two distinct characters (or fruit types). turns into longest substring with k distinct chars where k = 2.

code

def fruits_into_baskets(fruits):
  window_start = 0
  max_length = 0
  fruit_frequency = {}

  # try to extend the range [window_start, window_end]
  for window_end in range(len(fruits)):
    right_fruit = fruits[window_end]
    if right_fruit not in fruit_frequency:
      fruit_frequency[right_fruit] = 0
    fruit_frequency[right_fruit] += 1

    # shrink the sliding window, until we are left with '2' fruits in the fruit 
    # frequency dictionary
    while len(fruit_frequency) > 2:
      left_fruit = fruits[window_start]
      fruit_frequency[left_fruit] -= 1
      if fruit_frequency[left_fruit] == 0:
        del fruit_frequency[left_fruit]
      window_start += 1  # shrink the window
    max_length = max(max_length, window_end-window_start + 1)
  return max_length

def main():
  print("Maximum number of fruits: " 
           + str(fruits_into_baskets(['A', 'B', 'C', 'A', 'C'])))
  print("Maximum number of fruits: " 
           + str(fruits_into_baskets(['A', 'B', 'C', 'B', 'B', 'C'])))

main()