Pair with Target Sum (easy)

old approach:
copy design gurus solution and code, summarise

new approach:
copy problem and examples, ATTEMPT solution, then compare with actual solution.

Problem statement
given an array of sorted numbers and a target sum, find a pair in the array whose sum is equal to the given target.
write a function to return the indices of the two numbers such that they add up to the given target.

example 1
Input: [1, 2, 3, 4, 6], target=6
Output: [1, 3]
Explanation: The numbers at index 1 and 3 add up to 6: 2+4=6

example 2
Input: [2, 5, 9, 11], target=11
Output: [0, 2]
Explanation: The numbers at index 0 and 2 add up to 11: 2+9=11

my attempt:
function python(array, target):
    #given array, create pointers
    start = array[0]
    end = array[len(array)-1]

    output = [-1,-1]

    while start != end: #ensures that we keep going till they equal each other
        currSum = array[start]+array[end]
        if currSum == target:
            output[0] = start
            output[1] = end
            return output
        elif currSum < target:
            start +=1
        else #currSum > target:
            end -= 1
    
    #only reach here if error
    return 

written solution:
    follow two pointers approach, one at beginning and one at end. at every step, check if numbers add to sum.
    if so, found pair and return.
    if not do:
        1. if sum greater than target, this means we need a pair with a smaller sum. decrement end pointer.
        2. if sum less than target, increment start pointer for inverse reason.

code soln